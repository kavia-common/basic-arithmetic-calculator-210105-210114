{"is_source_file": true, "format": "JavaScript", "description": "This file defines error handling utilities for a JavaScript project, including functions for safe function execution with error catching and error message mapping for user communication.", "external_files": ["./audit"], "external_methods": ["auditError"], "published": ["safeTry", "toUserMessage", "default"], "classes": [], "methods": [{"name": "safeTry(fn, onError, auditContext = { userId: 'anonymous', beforeState: null })", "description": "Executes a provided function, catches errors, logs audit error, and executes an error callback if provided.", "scope": "", "scopeKind": ""}, {"name": "toUserMessage(technicalError)", "description": "Converts technical error objects into user-friendly messages based on error content.", "scope": "", "scopeKind": ""}], "calls": ["auditError"], "search-terms": ["error handling", "auditError", "safeTry", "toUserMessage", "error logging", "JavaScript error utilities"], "state": 2, "file_id": 17, "knowledge_revision": 36, "git_revision": "", "ctags": [{"_type": "tag", "name": "safeTry", "path": "/home/kavia/workspace/code-generation/basic-arithmetic-calculator-210105-210114/react_js_frontend/src/lib/errorHandling.js", "pattern": "/^export function safeTry(fn, onError, auditContext = { userId: 'anonymous', beforeState: null }) /", "language": "JavaScript", "kind": "function", "signature": "(fn, onError, auditContext = { userId: 'anonymous', beforeState: null })"}, {"_type": "tag", "name": "toUserMessage", "path": "/home/kavia/workspace/code-generation/basic-arithmetic-calculator-210105-210114/react_js_frontend/src/lib/errorHandling.js", "pattern": "/^export function toUserMessage(technicalError) {$/", "language": "JavaScript", "kind": "function", "signature": "(technicalError)"}], "hash": "bf7baa2c0ccd0075b6bab0dc1200a50b", "format-version": 4, "code-base-name": "react_js_frontend", "filename": "react_js_frontend/src/lib/errorHandling.js", "revision_history": [{"36": ""}]}